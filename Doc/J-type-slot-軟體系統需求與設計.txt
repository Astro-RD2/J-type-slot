J-Type Slot 系統設計
=============================================
專案概述:
- 永宙公司委託泰偉電子合作開發一 J型老虎機
  2025/4/2 正式立案. 預計開發時間 1 ~ 2 個月.

Version 1.1 - 2025/4/13
Version 1.2rc1

============================================================
0. 客戶(應)提供資訊
============================================================
- 發展網頁與測試帳號:
  https://demo.n1s168.com/#/
  ITgame01@n1s.com / ITgame01
  ITgame02@n1s.com / ITgame02
  ITgame03@n1s.com / ITgame03

- API 測試接口 for 登入:
  HOST https://dev-api.n1s168.com/api/v1/user/login/
  ACCOUNT: ITgame01
  PASSWORD: ITgame01

- 聯繫資料:
   Telegram 群組: "泰偉*永宙 實體機台聯合開發案"
   永宙技術窗口: N1S x Louis/@lvuitton33688
   API技術人員: 丹晨/@dan_cheng_zi


============================================================
1. 需求確認 Requirement
============================================================
- 硬體規格
  - 主機規格：
    CPU i5-8350U: https://www.intel.com.tw/content/www/tw/zh/products/sku/124969/intel-core-i58350u-processor-6m-cache-up-to-3-60-ghz/specifications.html
    RAM 8G, SSD 128G
    COM PORT x6 - COM2 for Bill acceptor
    USB 2.0  x4 - for Touch panel and Receipt printer
    USB 3.0  x2
    HDMI     x1 - FHD Monitor
    VGA      x1
    LAN      x2 - LAN1 for internet, LAN2 for local maintenance
  - Bill acceptor ICQ L70 series
    Required: RS-232 port on COM2
  - 印表機:
    要求: Openframe, ESC/POS 相容, 考慮機構大小.
    (1) ICT SP1 series (https://www.ictgroup.com.tw/download/Installation%20Guide/SP1%20Series%20Installation%20Guide%20(EN)%20H6887G-R.pdf)
        各 series (BDS, BDL, BNS, BNL, NNS) 只是機構/紙捲大小/裝置不同, 軟體方面完全相同. NNS總高度較小 106.27mm
        文件內有提到 ESC/POS 相容
        正視圖 H=120mm, W=100mm
    (2) ICT GP-58CR (https://www.ictgroup.com.tw/download/Installation%20Guide/GP-58CR%20Installation%20Guide%20(EN)%20H4816M-R.pdf)
        文件內有提到 ESC/POS 相容
        正視圖
        正視圖 H=120mm, W=100mm
    (3) Embedded 58MM 熱收據印表機迷你列印模組支援 USB 和 TTL 序列埠 ESC/POS 命令
        https://www.amazon.com/Maikrt-Embedded-Thermal-Printing-Commands/dp/B07PX9NYR3
    (4) HCC-E5 華辰聯創
        https://www.szhcct.com/HCC-E5-ESC-POS-80mm-Thermal-Receipt-Panel-Printer-with-Auto-Cutter-pd738501098.html
    (5) HCC-EC80 USB RS232 80mm
        https://cn.szhcct.com/hcc-usb-rs232-80mm-1d-2d-barcode-printing-thermal-embedded-printer-hcc-ec80_p154.html
    (6) HSPOS Kiosk 印表機
        https://hsprinter.en.alibaba.com/productgrouplist-817515059/Kiosk_Printer.html?spm=a2700.shop_index.74.4.3c9c5fb35ISGK0
        
    Impact Receipt: epson tm-u220
    Impact Slip: epson tm-h6000IV
    Thermal Receipt: TM-m30, TM-T88VI, 
  - Touch panel:
    PCAP/USB, 完全滑鼠模擬.
  - 實體按鍵與鑰匙:
    完全使用 keyboard 對應按鍵來模擬輸入.
  - 需要保持 intenet 時間同步.
  - 機台會設計一對外 USB 充電孔供玩家手機充電, 要求必須與主機板的電源、USB 孔相互獨立.
  - 瀏覽器:
    遊戲瀏覽器 (Game browser): 首頁 (Home page), 遊戲載入 (Game loading pages), 遊戲 (Game pages)
    Operator瀏覽器 (Operator browser): Networking, Register, Payment device test

- Keyboard 對應
  - 實體按鍵與鍵盤對應表
    -- KEYBOARD -------------------------------
    實體按鍵   鍵盤對應              轉換/動作                 說明
    --------  ------------------- ------------------------ -----------------------
    SPIN      [Ctrl-ALT-Enter]    於遊戲中轉換成[SPACE]送出   啟動一局遊戲
    CASHOUT   [Ctrl-ALT-P]                                 進行 Payout
    HOME      [Ctrl-Alt-HOME]     引導目前網頁至首頁.         用來回到遊戲首頁.
    VOLUME+   [Ctrl-ALT-'+']      amixer set Master 10%+   提升音量
    VOLUME-   [Ctrl-ALT-'-']      amixer set Master 10%-   降低音量
    REFRESH   [Ctrl-ALT-R]        滑鼠點選 Refresh 圖案      觸發網頁中央獲取最新 credits 數值的動作
    -- KEY -------------------------------
    OPERATOR  [Ctrl-ALT-O]                                 於 HOME 狀態, 可切換至 OPERATOR 選單.
  - 無須按鈕背燈保持全亮, 無須依情境控制.
    群組 2025/4/2: 對方回應所有按鍵無須依據情境, 全亮即可. 

- API (站在機台觀點)
  - 帳號註冊取得 token
    描述: 透過帳號/密碼取得認證 token, 供未來網頁登入以及 API 連線使用.
    發動時機: 於 Operator menu => Setting Page => 輸入帳/密並按下 "註冊/取得認證 token".
    SEND: <account>, BASE64(HASH(<password>))
    RECEIVE: <token>
  - 登入驗證
    描述: 檢查指定 token 是否有效.
    發動時機: 開機後, 不定時刻, 可透發送此來與中央確認該 token 是否有效.
    SEND: <token>
    RECEIVE: <token status>
  - 請求入金授權:
    描述: 透過此向中央取得入金授權
    發動時機: 當玩家放入紙鈔時, 向中央確認是否接受此紙鈔.
    SEND: <currency>, <value>
    RECEIVE: <status>, <TXID>
  - 入金確認:
    描述: 透過此回報已經確認接收進紙鈔
    發動時機: 當將紙鈔轉移進錢箱時.
    SEND: <TXID>
    RECEIVE: <status>, <TXID>, <currency>, <value>
  - 取得出金授權:
    描述: 透過此向中央取得出金授權
    發動時機: 當玩家按下 [CASHOUT] 按鈕時, 向中央取得授權、交易代碼、以及金額.
    SEND: (none)
    RECEIVE: <status>, <TXID>, <currency>, <value>
  - 出金確認:
    描述: 透過此回報已經印出收據(兌現憑據)予玩家
    發動時機: 當列印收據成功時.
    SEND: <TXID>
    RECEIVE: <status>
  - (目前保留) 目前狀態 : Occupied, Non-occupied
            [HOME][GAME]

- Operator Menu
  - 概述:
    - 當目前位於 "遊戲首頁" 且轉動 [Operator] key 時, 應切換至顯示 Operator menu.
    - 於 Operator menu, 一律顯示滑鼠游標以利偵錯. 離開 Operator menu 時則隱藏游標.
    - Operator menu 將使用 Web App (Python + Flask) 方式開發.
    - 設定檔案位置 (Runtime/Embedded): 
        /root/astro/data/setting.ini 
        /var/astro/data/setting.ini-default  <-- 不更動此, 供回復出廠值.
    - Python 存取設定檔案方式: https://docs.python.org/3/library/configparser.html
      import configparser
      config = configparser.ConfigParser()
      config.read('/opt/astro/data/setting.ini', encoding='utf8')
      config['BASIC']['TITLE'] = 'ABC Casino'      
      config['NETWORK'] = {'DEVICE': 'eth0', 
                           'BOOTPROTO': 'dhcp'}
      print(config['BASIC']['TIME_ZONE'])       # show: UTC+7
      ...
      with open('setting.ini', 'w') as configfile:
         config.write(configfile, space_around_delimiters=False)
  
  - 螢幕上半部資訊
    於 Operator menu 之螢幕上半部恆常顯示如下資訊:
    +--------------------------------------------
    |
    |Kernel ver:      IP:         Current date/time:
    |HOME URL: https://xxxxxxxxxxxxx
    |Title:          Asset:         Account:
    |Token state:
    |Note:
    +--------------------------------------------
    補充說明:
      - 顯示相關資訊, 以利管理.
      - Token state: 僅顯示 Valid 表示有效 或是 Invalid 表示無效.

  - 左邊主選單:
    - Network setting
    - Basic data setting
    - Register
    - Bill acceptor test
    - Receipt printer test
    - Reset
    - [CLOSE] 按鈕: 關閉 Operator menu, 回到 Game menu

  - 功能: Network setting:
    +--------------------------------------------
    |(V) Dynamic/DHCP
    |( ) Static
    |   IP address:___________  Netmask:___________
    |   Gateway:___________
    |
    |[ Apply ]
    |
    +--------------------------------------------
    補充說明:
      - 因為需要輸入數字. 本頁應該顯示虛擬數字鍵盤.
      - Dynamic/DHCP: 二選一, 透過 DHCP protocol 動態取得網路設定.
      - Static, IP address, Netmask, Gateway: 如果選擇 Static, 系統將使用此處設定.
        選擇 Dynamic/DHCP 或 Static, 對應到設定檔 [NETWORK/BOOTPROT]
        如果選擇 Static, 則 IP address, Netmask, Gateway 分別對應到 [NETWORK/IPADDR], [NETWORK/NETMASK], [NETWORK/GATEWAY]
      - 必須按下 [ Apply ] 使修改生效. 否則頁面轉移變更失去.

  - 功能: Basic data setting
    +--------------------------------------------
    |The title or shop name which will be printed on receipt.
    |__________        
    |
    |The custom remark/reminder showed on the display when entering operator menu.
    |________________________________________________________
    |
    |Time zone: ________[V]
    |Time format: _______________[V]
    |
    |Currency symbol:___[V], printed on the (V)left ( )right side of the money
    |Thousand separator:__[V]
    |
    |The URL of home page of game portal.
    |Home URL: _________________________[V]
    |API Entry: __________________________????
    |
    |The unique ID for this slot machine (optional)
    |Asset:____________
    | 
    |[ Apply ]
    |
    +--------------------------------------------
    補充說明:
      - 因為需要輸入文數字. 本頁應該顯示虛擬(全)鍵盤.
      - Title: 對應到設定檔 [BASIC/TITLE]
      - Custom Remark: 對應到設定檔 [BASIC/REMARK]
      - Time zone: 自清單挑選 time zone. 故可以顯示計算 Local time 與 UTC 之對應.
        清單對應到設定檔 [BASIC/TIME_ZONE_LIST]
        數值對應到設定檔 [BASIC/TIME_ZONE]
      - Time format: 自清單挑選特定格式. 例如: May 20, 2024
        清單對應到設定檔 [BASIC/TIME_FORMAT_LIST]. 例如: d/M/YYYY (4/23/2025), M/d/YYYY (4/23/2025), MMM d, YYYY (Apr 23, 2025)
        數值對應到設定檔 [BASIC/TIME_FORMAT]. 柬埔寨內定為 d/M/YYYY.
      - Currency symbol: 手動輸入或自清單選擇, 供列印收據時參考. 例如: $, £, ¥, €, ₣, etc. 並選擇顯示於金額的左邊還是右邊.
        清單對應到設定檔 [BASIC/CURRENCY_SYMBOL_LIST]
        數值對應到設定檔 [BASIC/CURRENCY_SYMBOL]
        列印位置對應到設定檔 [BASIC/CURRENCY_SYMBOL_PRINT_SIDE]
      - Thousand separator: 自清單挑選, 供列印收據時參考. 可選擇: ',', '.', (None)
        清單寫死於程式.
        數值對應到設定檔 [BASIC/THOUSAND_SEPARATOR]
      - Home URL: 手動輸入或自清單選擇. 表示遊戲首頁 URL.
        清單對應到設定檔 [BASIC/HOME_URL#]. #=1~3. 當輸入有效 Home URL 就會加入此清單, 如果超過三組最舊的被排擠 (MRU rule).
        數值對應到設定檔 [BASIC/HOME_URL]
      - Asset: 此老虎機之唯一識別 ID, 由系統營運商提供. (for future, 目前選擇性提供). 
        The system uses Asset + MAC to identify the specific machine.
      - 必須按下 [ Apply ] 使修改生效. 否則頁面轉移變更失去.

  - 功能: Register
    +--------------------------------------------
    |Account:_____________
    |Password:*********
    |[ Get token ] [ Drop token ]
    |
    |Token: Valid from (timestamp)
    |[ Login test ]
    |
    +--------------------------------------------
    補充說明:
      - Account, Password: 此機台所代表玩家之帳號密碼.
        Account 對應到設定檔 [REGISTER/ACCOUNT]
      - 輸入帳密後, 按下 [Get token] 按鈕, 將透過 API 向後台取得 token.
      - Token: 僅顯示 token 狀態, 如下某一:
        "Valid from YYYY/MM/DD HH:mm:SS" 表示目前 token 有效
        "Invalid"  表示目前 token 無效.
        --
        Token 狀態對應到設定檔 [REGISTER/TOKEN] 
          如果內容為空, 表示無效. 
          如果不為空, 表示 token 有效.
        在 Token 有效的情況下, 生效時間對應到設定檔 [REGISTER/TOKEN_LAST_TS]
      - 於 Token 有效情況下, 可隨時按 [Login test] 按鈕來驗證 token, 驗證結果透過彈出訊息視窗告知.

  - 功能: Bill acceptor test
    +--------------------------------------------
    |Model name:xxxxx    Firmware:xxxxx   CRC:xxx
    |Currency: USD
    |Status: <status>
    |Last input: 10 Dollars
    |[ Return bill ] [ Stack bill ]
    |Note! All input here will NOT be counted into accounting
    |
    +--------------------------------------------
    補充說明:
      - Status 顯示 Bill acceptor 目前狀態.
        可能是: Ready, Disconnected, Bill Jam, Bad code, CRC error, Stack (near) full, 
               Cashbox uninstalled, Bill counterfeit, Reverse way, Wrong protocol, Unknow bill...
      - 於此頁, 當 Bill acceptr 狀態為 Ready, 可以隨時放入紙鈔進行測試.
      - 當放入紙鈔, 紙鈔會捲入至暫存區(Escrow) 並進行識別, 然後停在那.
        接下來可按下 [ Return bill ] 來退回紙鈔, 或是 [ Stack bill ] 將紙鈔捲入 cash box.
        於此頁進入 cash box 之紙鈔不計入帳務. (測試完後紙鈔要拿出來)

  - 功能: Receipt printer test
    +--------------------------------------------
    |Model name:xxxxx   Driver:xxxxx  Firmware:xxxx   CRC:xxxx
    |Status: <status>
    |[Print test receipt]
    |
    +--------------------------------------------
    補充說明:
      - Status 顯示 Receipt printer 目前狀態.
        可能是: Ready, Disconnected, Paper Jam, Controller error, ....
      - 於此頁, 當 Receipt printer 狀態為 Ready, 可以按下 [Print test receipt] 來列印測試收據.

  - 功能: Reset
    +--------------------------------------------
    |Reset the unresolved transaction
    |(other descriptions)
    |[ TX Reset ] 
    |
    |Restore to factory default
    |[ Factory Reset ]
    |
    +--------------------------------------------
    補充說明:
      - 當按下 [TX Reset], 將進行如下動作:
        清除本地端 penging 入金/出金 TX 紀錄 (at NVRAM).
        清除 printer (CUPS) output queue
        用於交易已經發生不同步/錯亂情況.
      - 當按下 [Factory Reset], 除了執行 [TX Reset] 動作, 也會將所有設定資料回復到出廠值.
        用於將整個機台復原至出廠狀況, 或是發生重要檔案或相關設定檔毀損時或可透過此來修復.
      - 當按下按鈕, 都需要再顯示警告訊息以及確認.

- Kernel 即時訊息: 懸浮顯示訊息於螢幕, 用於警告、提醒機台系統狀況予玩家或營運人員, 以利狀況排除.
  - 採用懸浮半透明視窗(Post-It) 方式於螢幕角落顯示, 會持續顯示 4 秒後淡出消失, 如果狀況依舊, 會緊接著再次顯示下一個 4 秒.
  - 相關事件包括:
    - 主門被打開??  <-- 不用做此.
    - 與 BA / 印表機失連
    - 印表機卡紙 / 快沒紙 / 缺紙
    - 紙鈔機錢箱被取出 / Stack快滿 / 已滿
    - 與系統斷線 / API登入驗證失敗
    - 其它軟體錯誤: 必要軟體請求無法達成、檔案失去, 被竄改.
    - 其它 I/O 錯誤: 磁碟滿載、記憶體不足等、網路 Lag 嚴重/不穩定, etc.

- 啟動流程:

- 收據格式:
  - 欄位: 抬頭, 交易代號(TX), 機台帳號, 金額, 時間(Local柬埔寨)
         條碼: TX+帳號+金額+CHECKSUM 構成一維條碼. (optional)
  - Title/抬頭: 顯示 Basic data/Title 資訊.
  - TX No./交易代號: 顯示出金交易代號.
  - Account/機台帳號: 顯示本機台用於登入之帳號.
  - 金額: 顯示收據金額. 格式依據設定檔, 例如: $23,223
  - 時間: 顯示列印時間. 格式依據設定檔, 例如: MM/DD/YYYY HH:mmSS


============================================================
2. 高階系統設計
============================================================
- configuration file 欄位收集


============================================================
3. API 設計
============================================================
請參考文件 Doc/J型老虎機API文件-入金出金.txt



============================================================
4. 細部系統設計-作業環境/系統
============================================================
- 有關實體按鍵處理邏輯
  - 當按下 [Refresh], 如果目前位於遊戲瀏覽器/遊戲, 送出空白(' ') 至遊戲瀏覽器.
  (todo)

- 磁碟分割區、目錄、與檔案安排
  原始 VLT
  Partition    Size     Mount point     Property
  -----------  -------  --------------  ----------------
  /dev/sda1    10G      /               ext2, readonly
  /dev/sda2             (Extended)      Containing /dev/sda5, /dev/sda6
  /dev/sda3    10G      /var            ext4, read/write
  /dev/sda4             swap
  /dev/sda5    10G      /var/opt        ext4, read/write, noatime, barrier=0, data=writeback, nobh
  /dev/sda6    81.2G    /opt            ext4, read/write or readonly
  -----------  -------  ---------------  ----------------
  
  這個專案 J-type slot:
  Partition    Size     Mount point      Property
  -----------  -------  ---------------  ----------------
  /dev/sda1    20G      /                ext4, readonly
  /dev/sda2             (Extended)       Containing /dev/sda5, /dev/sda6
  /dev/sda3    20G      /var             ext4, read/write
  /dev/sda4             swap
  /dev/sda5    10G      /var/opt        ext4, read/write, noatime, barrier=0, data=writeback, nobh
  /dev/sda6    81.2G    /opt            ext4, read/write or readonly
  -----------  -------  ---------------  ----------------
  TMP          /var/tmp???      Shared memory

- Directory structure and File
  - Diretories structure
    /root/
    /root/astro/
    /root/astro/content/                                Downloadable game/content package 所在位置.
    /root/astro/data/ --> /var/astro/data/              程式公用資料與公用設定檔案位置
    /root/astro/nvram/ --> /var/astro/nvram/            nvram 所在位置.
    /root/astro/factory_default/                        出廠值存放位置.
    /var/astro/etc/                                     可變設定檔位置 (網路, hostname, 防火牆等)
  - Files  
    /root/astro/start.sh                                  
    /root/astro/content/AstroKernel/*                      
    /root/astro/content/OperatorMenu/*
    /root/astro/factory_default/etc.tgz                 tar zcvf etc.tgz /var/astro/etc/
    /root/astro/factory_default/root_.config.tgz        tar zcvf etc.tgz /root/.config/
    /etc/(certain files) --> /var/astro/etc/(certain files)
    /root/astro/data//setting.ini --> /var/astro/data/setting.ini    目前設定.
    /var/astro/data/setting.ini-default                 內定(出廠)設定檔

- Configuration file
  - 設定檔案名稱與位置 (Runtime/Embedded): 
    /root/astro/data/setting.ini (實際位置 /var/astro/data/setting.ini)
    /var/astro/data/setting.ini-default  <-- 不更動此, 供回復出廠值.
  - 原始定義/來源:
    C:\Work\AsProjects\J-type-slot\Src\Configuration-files-templete\setting.ini-default

- Log rotate 設定


============================================================
5. 細部系統設計-程式技術使用
============================================================
- 登入遊戲 API server, 取得 token
  import requests
  from requests_toolbelt.utils import dump      # for debug

  url = 'https://dev-api.n1s168.com/api/v1/user/login/'
  headers = {"Content-Type": "application/json"}
  data = { "account": "ITgame01", "password": "ITgame01" }
  
  try 
    response = requests.post(url, json=data, headers=headers)
    if response.status_code == 200:
      # success
      json_data = response.json()    # 取得 json 物件.
  except
    # error

  data = dump.dump_all(response)
  print(data.decode('utf-8'))
  
  print(response.status_code)  # 取得回應 code, 如果為 '200' 表示成功
  print(response.json())  # 取得回應 body



================================================================
6. 開發機安裝 (Embedded 安裝前期)
================================================================
開發機規劃重點:
  - 使用 Ubuntu 24.04 標準安裝. 
  - 使能夠於開機時自動使用 root 登入 Gnome/GDM (圖形介面).
  - 設定帳號/密碼: 
      guest/123456   僅供 ssh client 登入用.
      root/!qaz2wsx  此為 root 帳號/密碼. 所有開發作業、執行環境等皆於此.
  - 如果使用 ssh client, 限使用 guest 帳號登入. 
    登入後如果要轉換成 root 使用者, 執行 'su -' 然後輸入 root 密碼即可.
  - 切換內定的 Wayland 至 X protocol
  - 使用 Firefox 瀏覽器為主.
  - Python 一律執行於虛擬環境 'base'
    啟動此虛擬環境: /root/py-venv/base/bin/activate
    離開此虛擬環境: 在任何地方直接執行 deactivate
    注意! 開發目錄 與 虛擬環境目錄 (/root/py-venv/base/) 相互獨立.
  - 對於 Python 模組, 例如模組名稱 xyz, 要求一律在虛擬環境下使用 pip install xyz 方式安裝.
  - Embedded 版本將自開發機版本修改過去.

開發機安裝設定步驟:
1. 使用 Ubuntu 24.04 LTS 進行標準安裝.
  鍵盤/英文: US
  時區: Canbodia (柬埔寨, Asia/Phnom Penh)     (未來考慮使用 UTC, 然後利用系統參數 offset +7)
  What apps do you like ....: 選擇 Default selection
  勾選 Install third-party software for graphics and Wi-Fi hardware
  勾選 Download and install support for additional media formats
  Computer name: JTYPE-DEVCOM
  Username: guest
  Password: 12345678
  確認勾選 Require my password to log in
  第一次登入選 guest
    右下出現齒輪, 選擇 Ubuntu on Xorg, 使切換到使用 X11 而非內定的 Wayland
  
2. 使開機後能自動以 root 帳號登入 GNOME/GDM
  參考 https://hackmd.io/@Cyui/B1YnFwT8R
  root 密碼: !qaz2wsx 
  設定完成重開機
3. 更新/修補系統並安裝 sshd
  $ apt update
  $ apt upgrade
4. 移除 snap firefox, 改安裝 DEB firefox
   參考步驟: https://www.omgubuntu.co.uk/2022/04/how-to-install-firefox-deb-apt-ubuntu-22-04
   如果不進行此, 會發生對 keyboard input 失效的情況.
   
  # 確認可以自命令列執行瀏覽器 (browser).
  $ firefox -kiosk -private-window "https://www.google.com"   可以成功全畫面、隱私分頁.
4. 安裝 sshd
  $ apt install ssh
5. (不要進行此)調整 /etc/ssh/sshd_config, 使能透過 ssh client 來遠端執行 X app
  $ vi /etc/ssh/sshd_config
  -----------------------------------
  ...
  X11Forwarding yes
  X11DisplayOffset 10 
  -----------------------------------
  上述測試結果失敗.
6. 如果安裝於 VMware Player/Station
  - 測試可自 Host OS 發出 ssh client 連線至此 Virtual machine.
    $ ip a
    ...
    inet 192.168.153.128/24      <-- 於 Host OS 使用 ssh client 連接此 192.168.153.128
    ...
  - 建議可使用 Share folder, 方便共享開發目錄.
7. 使 Python 易用
  $ apt install python3-pip
  $ apt install python-is-python3
  $ apt install python3-venv
  (不要)$ apt install python3-uinput     <-- 尚未確認.
  # 其它套件.
8. 建立 Python 虛擬環境 base
  $ mkdir /root/py-venv/
  $ python -m venv /root/py-venv/base
  $ source /root/py-venv/base/bin/activate   <-- 啟動虛擬環境. (可放在開機批次檔)
  $ deactivate    <-- 結束虛擬環境
  方便切換至 python virtual environment, 故進行如下建置:
    $ echo "alias py-activate-base='source /root/py-venv/base/bin/activate'" >> /root/.bash_aliases
    $ py-activate-base   <-- 之後執行此即可切換.
  $ 編輯 /root/.profile, 末尾加上
    source /root/py-venv/base/bin/activate
9. 安裝需要的 utility
  $ sudo apt install yad
10. 關掉 Wayland, 使用 X 
  $ sudo vi /etc/gdm3/custom.conf
    ------------------------------------------
    WaylandEnable = false
    ------------------------------------------
11. 相關桌面設定 (Ubuntu Setting)
  - Accessibility=>Typing=>Repeat Keys ^
    Speed to 80% Fast, 
    Delay to 10% Short
  - Power=>
      Power Mode => Performance
      Power Saving=>Screen Blank => Never
  - Region & Language => Format 選擇 United States
  所有 Ubuntu Setting 的內容都儲存於 ~/.config/dconf/*
11. Firefox 瀏覽器 (browser)
  - 單純化開啟 Firefox, 例如:
    $ firefox -private-window "https://www.google.com"
  - 進入設定頁:
    General => Always check if Firefox is the default browser    解除勾選, 不檢查.
    General => Language => Check your spelling as you type  解除勾選.
    Home => Homepage and new windows => Blank Page
    Home => New tabs => Blank Page
    Privacy & Security => Website Privacy Perferences 全部勾選 (不販售、不追蹤)
    Privacy & Security => 按下 [Clear Data], 選擇 Everything, 全選, 全清.
    Privacy & Security => Passwords 相關. 解除勾選
    Privacy & Security => Autofill => save and fill payent methods  解除勾選
    Privacy & Security => Firefox Data Collection and Use  全部不允許
13. 建立備份:
  - 桌面環境備份:
    $ cd /root
    tar zcvf /root/astro/factory_default/root_.config.tgz .config/
  - Firefox 設定備份:
    $ cd /root/snap
    tar zcvf /root/astro/factory_default/root_snap_firefox.tgz firefox/
14. 規則:
  - 登入 root 後自動執行的指令, 寫在 /root/.profile (~/.profile) 後面.
15. 安裝需要的 python 套件於虛擬環境 'base'  
    此處安裝只是 for 測試方便. 各自專案有自己的 requestments.txt
  $ source /root/py-venv/base/bin/activate
  (base) $ pip install requests
  (base) $ pip install selenium
  (base) $ pip install cryptocode
  (base) $ pip install keyboard

  

VMware Image 版本控制
----------------------------------
1. J-type-Slot-Dev-v1
   J-type-Slot-Dev-v1.1rc  
      修正 ~/.bashrc_aliases => ~/.bash_aliases
      pip install sele

================================================================
7. Embedded 設定
================================================================
- Screen 設定 (Portrait, 原本螢幕順時針轉 90 度)
  Ubuntu settings => Display => Portrait Right

================================================================
8. 型態管制
================================================================
1. 開發機 (VMware image):
  https://astroinc-my.sharepoint.com/:u:/g/personal/killbug_astrocorp_com_tw/Edr6MEapAIBJoeK-pBC8ZJoB1XRcwTlGXizxw2n8xjPwrQ?e=8UctfJ
  使用 VMware open 與執行即可.
  會自動使用 root 登入.
  如果要使用 ssh 登入, 於 VM 內開啟 Terminal, 執行 "ip a" 得知 IP, 然後使用 ssh client 登入 guest/123456 
  然後執行 "su -", root 密碼 (兩排)

2. GitHub: Astro-RD2 / J-type-slot
  Clone 至你的本地電腦: 
  $ git clone https://github.com/Astro-RD2/J-type-slot.git
  已經設定部門同事都可 read/write, 其他人只能read
  使用概念上, 將其當過去 Subversion 使用, 且直接  commit 至 branch 'main' 即可.

3. Python source file 格式: Unix, UTF-8
  且開頭必須要有如下兩行:
  #!/usr/bin/env python
  #-*- coding:UTF-8 -*-


================================================================
技術收集
針對需要的技術, 條列其內容與可能解決方案/參考資料如下.
================================================================
- 技術獲得 ToDo/Memo
  - ...

- 需要保持 internet 時間同步
  - 柬埔寨時區: UTC +7, Indochina Time (ICT)
    IANA 時區識別代號是 Asia/Phnom_Penh
  - $ sudo timedatectl set-timezone <your_time_zone>

- Ubuntu 自動以 root 登入 GNOME
  - https://hackmd.io/@Cyui/B1YnFwT8R

- 有關網頁登入
  - 註冊/取得驗證token
    Client                       Server
    ------                       ------
    Account, ------------------>
    HASH(PW) 
             <------------------ TOKEN (jwt 物件)

  - 實際登入方式
    方式一:
      將 <TOKEN> 接於 <URL of 登入頁面> 之後
    方式二 (不太好):
      將 <TOKEN> 儲存至 Local cookie
      於登入頁面, 相關 script 會先檢查並讀取指定 local cookie 並用該 token 來登入.
  - TOKEN 格式參考:
    - JWT (JSON Web Token), 可還原
    - 或 BASE64(HASH(內容)), 不可還原

- 如何使用命令列程式調節音量: (need to try)
  - https://unix.stackexchange.com/questions/21089/how-to-use-command-line-to-change-volume
  - command examples:
    $ amixer set Master 50%
    $ amixer -D pulse set Master 50%
    $ amixer set Master 10%+    音量增加 10%
    $ amixer set Master 10%-    音量減少 10%
    $ amixer set Master mute    靜音
    $ amixer set Master unmute  取消靜音
    $ amixer set Master toggle  
  - 如果瀏覽器內遊戲將音量關閉, 我方是否需要得知.

- 透過命令列啟動瀏覽器 (browser):
  - Ubuntu 自動開啟 Firefox 並且全螢幕顯示
    firefox -kiosk -private-window [target URL]
    firefox -kiosk -private-tab [target URL]
    命令列參數參考: https://wiki.mozilla.org/Firefox/CommandLineOptions#-new-tab_URL
    可開啟多個 Window, 每個 Windows 可以有多個 Tab
  - (不考慮)
    Ubuntu 自動開啟 Google Chrome 並且全螢幕顯示
    chromium-browser https://blog.clarence.tw --start-fullscreen --incognito
    https://blog.clarence.tw/2023/02/26/ubuntu-%E8%87%AA%E5%8B%95%E9%96%8B%E5%95%9F-google-chrome-%E4%B8%A6%E4%B8%94%E5%85%A8%E8%9E%A2%E5%B9%95%E9%A1%AF%E7%A4%BA/
    說明:
      --incognito: 表示開啟隱私/無痕分頁.

- 透過程式來監視與控制被啟動的瀏覽器:
  - Python webbrowser.py 模組
    https://stackoverflow.com/questions/5150610/how-to-simulate-mouse-click-with-the-webbrowser-control
    https://medium.com/@chensheep1005/python-%E9%96%8B%E5%95%9Fbrowser-540dae3ad344
  - Python selenium import webdriver
    Selenium 官網: https://www.selenium.dev/documentation/webdriver/browsers/firefox/
    參考: https://steam.oxxostudio.tw/category/python/spider/selenium.html#a1
    解決無法載入 profile 問題: https://stackoverflow.com/questions/72405117/selenium-geckodriver-profile-missing-your-firefox-profile-cannot-be-loaded
    -------------------------------------------------
    安裝:
    $ pip install selenium
    注意! Firefox 驅動程式已經存在於 /snap/bin/firefox.geckodriver, 無須另外安裝.
    -------------------------------------------------
    範例:
    from selenium import webdriver
    from selenium.webdriver.common.keys import Keys
    from selenium.webdriver.support import ui
    from selenium.webdriver.common.by import By
    cService = webdriver.FirefoxService(executable_path='/snap/bin/firefox.geckodriver')        # <-- always have this file in that place
    driver = webdriver.Firefox(service = cService)
    #driver.get("https://www.google.com")
    driver.get('https://demo.n1s168.com/#/')
    title = driver.title()
    driver.implicitly_wait(0.5)   # <-- wait for page to load
    text_box = driver.find_element(by=By.NAME, value="my-text")
    submit_button = driver.find_element(by=By.CSS_SELECTOR, value="button")
    text_box.send_keys("Selenium")
    submit_button.click()
    -------------------------------------------------
    https://stackoverflow.com/questions/28431765/open-web-in-new-tab-selenium-python
    self.selenium.switch_to.window(window_name=window_name)   <-- 切換 between tabs


- 如何透過 Python 程式來模擬實體按鍵輸入 (鍵盤/keyboard)
  - https://stackoverflow.com/questions/51406276/simulating-mouse-and-keyboard-input-on-wayland-and-x11
  - 於 X11 環境: 
    - Python module keyboard   <-- 我們使用此. 
    - 可使用若干程式以及 Python 如 xte, xdotool, xvt 等來方便模擬,
    - 可以使用 XLib 的 XSendEvent, XWrapPointer 來模擬.
  - 於 Wayland 環境:
    原本可使用若干程式如 xte, xdotool, xvt 等來方便模擬, 
    自 Ubuntu 21 之後, 內定使用 Wayland 而非 X protocol, 那些程式全部失效.
    https://askubuntu.com/questions/1352062/xte-stopped-working-after-upgrading-to-ubuntu-21-04
    在 Wayland 環境下, 必須改透過存取裝置檔案 /dev/input 的方式來進行模擬按鍵、滑鼠、搖桿等.
    但要存取 /dev/input, 內定需要具有 root 權限.
    - 透過 python3-uinput 模組
      模組說明/官方:
        https://github.com/pyinput/python-uinput/
        https://pypi.org/project/python-uinput/
        請參考目錄 examples/ 內容有使用範例.  
        媒角: 發送第一個 key 之前, 需要 delay 約 10ms
      安裝: $ sudo apt install python3-uinput
    - 透過 ydotool utility
      安裝: $ sudo apt install ydotool
           $ sudo apt install ydotoold   <-- backend service
           $ sudo ydotoold &             <-- launch backend daemon
      執行範例:
           $ sudo ydotool type 'hello world!'
           $ sudo ydotool key ctrl-alt-f3
           $ sudo ydotool key ctrl-backspace
    - 如何使 non-root 使用者能存取 /dev/input
      https://askubuntu.com/questions/520494/allow-one-process-access-to-dev-uninput-without-completely-compromising-securit
      https://unix.stackexchange.com/questions/242222/read-from-dev-input-devices-without-root-privileges

- Python request 範例:
  參考: https://blog.apify.com/python-post-request/
  ----------------------------------------
  import requests
  #(不需要) import json

  url = 'http://example.com:8000/submit'
  data = {'data1': 1, 'data2': 2}       # 使用字典(dict) 來描述資料.
  print(data)
  #(不需要) headers = {"Content-Type": "application/json"}
  #(不需要) data_json = json.dumps(data)          # 轉換成 json 格式.
  headers = {'Authorization': 'Bearer ' + auth_token}
  try:
      #(不需要) r = requests.post(url, data=data_json, headers=headers, timeout=15)   # default timeout is 30 seconds
      r = requests.post(url, json=data, headers=headers, timeout=15)
  except:
      return   # if the requests.post fails (eg. the site is down) I want simly to return.
               # Currenly it hangs up in the requests.post without raising an error.

  # start to handle 'r'
  if (r.text == 'stop'):
      sys.exit()
  ----------------------------------------
  auth_token: 為 JWT object, 一般為之前自 API server 所獲得.
  如果未給 timeout= 參數, default timeout is 30 seconds
  如果直接於 requests 內使用參數 json=<dict object>, 內部直接會轉換成 json, 且 header 內自動加上  Content-Type: application/json

  登入:
  #HOST https://dev-api.n1s168.com
  #ACCOUNT: ITgame01
  #PASSWORD: ITgame01

  import requests
  from requests_toolbelt.utils import dump      # for debug

  url = 'https://dev-api.n1s168.com/api/v1/user/login/'
  headers = {"Content-Type": "application/json"}
  data = { "account": "ITgame01", "password": "ITgame01" }
  
  response = requests.post(url, json=data, headers=headers)
  data = dump.dump_all(response)
  print(data.decode('utf-8'))
  
  print(response.status_code)
  print(response.json())
  

- ICT 印表機測試:
  Reset: 1B 72 01
  Switch to ESC/POS: 1B 23
  切換回 ASCII: 1C 2E
  印表機恢復初始設定: 無底線、取消反白、單倍寬、單倍高、16x24 字型、ASCII 編碼模式、字元靠左對齊、一維條碼位置重置、一維條碼高 140 點: 1B 40
  列印濃淡: 1D 28 4B m
  
  echo -e -n '\x1B\x72\x01' > /dev/ttyACM0
  echo -e -n '\x1B\x23' > /dev/ttyACM0
  echo -e -n '\x1C\x2E' > /dev/ttyACM0
  echo -e -n 'Hello World\n\f' > /dev/ttyACM0
  echo -e -n '\x1D\x61' > /dev/ttyACM0


- AstroKernel hook keyboard
  - Keylogger
  (todo)

- 彈出式懸浮訊息:
  透過 yad utility 來達成.
  $ sudo apt install yad
  參考資料:
    https://smokey01.com/help/yad-tips-0.0.2.html
    https://yad-guide.ingk.se/examples/examples.html
  例如: 顯示一 popup 訊息, 五秒後自動消失.
  $ yad --on-top --no-buttons --undecorated --borders=50 --text-align=center --timeout=5 --text="Hello World!" &

- 懸浮鍵盤
  - florance
    https://manpages.ubuntu.com/manpages/focal/man1/florence.1.html
    sudo apt install florence
    $ florence --use-config=FILE --focus[=WINDOW]  
      - 可以指定 configure file. (故格式可以特定)
      - 可以只將按鍵丟給指定視窗. 所以不會將 key 丟到不想去的地方.
    florance must be run under X11, so must choose X11 instead of Wayland
  - onboard
    https://askubuntu.com/questions/1426352/how-to-get-on-screen-keyboard-osk-to-work-like-a-mobile-device
    安裝: sudo apt install onboard
    目前安裝過程會出現 error, 但依然可安裝與執行.
    另外, 覺得執行結果比不上 Florance 友善, 會搶 cursor.
  - GOK (Gnome 的屏幕键盘)，kvkbd，onboard
  
- 設定檔案
  進階 ini 格式: 支援單一變數多行 value; 支援代入${name}; '#' 或 ';' 為註解.
  使用範例: https://docs.python.org/3/library/configparser.html
  -- 範例: example.ini ----------------------------------------
  [DEFAULT]
  ServerAliveInterval = 45
  Compression = yes
  CompressionLevel = 9
  ForwardX11 = yes

  [forge.example]
  User = hg
  # comment: no more data after User under [forge.example]

  [topsecret.server.example]
  Port = 50022
  ForwardX11 = no

- 透過 key 來加密字串, 並只能用同一 key 才能解密
  https://stackoverflow.com/questions/27335726/how-do-i-encrypt-and-decrypt-a-string-in-python
  安裝: pip install cryptocode
  使用: 
  import cryptocode
  encoded = cryptocode.encrypt("mystring","mypassword")
  # And then to decode it:
  ecoded = cryptocode.decrypt(encoded, "mypassword")

- For many reason. 關掉 Wayland, 使用 X 11
  方式尚未確定.
  - https://askubuntu.com/questions/1410256/how-do-i-use-the-x-window-manager-instead-of-wayland-on-ubuntu-22-04
    https://discourse.ubuntu.com/t/how-to-switch-from-x11-to-wayland-on-live-ubuntu-24-04-1/52917
  - $ sudo vi /etc/gdm3/custom.conf
    ------------------------------------------
    WaylandEnable = false      <-- active this line
    ------------------------------------------
    $ sudo systemctl restart gdm3
  - Check your session type with echo "$XDG_SESSION_TYPE"
    $ echo $XDG_SESSION_TYPE
    X11
    -------
    On the desktop: Ubuntu Settings --> System --> About --> Windowing System should:'X11'

- Ubuntu 下, Firefox 的 configuration files (setting, bookmark, ...)
  參考: https://askubuntu.com/questions/1414757/where-does-firefox-snap-store-the-profiles
  location: ~/snap/firefox/common/.mozilla/firefox/kb9384jq.default/

- 列印  
  - 插入 ICT SP1 printer USB, 會顯示如下裝置 /dev/ttyACM0:
    echo -e -n '\x1B\xF0' > /dev/ttyACM0

- 開機後啟動 Python virtual environment 並執行 ~/.profile 內命令.

